<?xml version="1.0" encoding="UTF-8"?>
<posts><currentPost><id>6</id><title>Sparse Matrix</title><content>A sparse matrix or sparse array is a matrix in which most of the elements are zero. By contrast, if most of the elements are nonzero, then the matrix is considered dense. The number of zero-valued elements divided by the total number of elements (e.g., m x n for an m X n matrix) is called the sparsity of the matrix (which is equal to 1 minus the density of the matrix).Storing a sparse matrix  A matrix is typically stored as a two-dimensional array. Each entry in the array represents an element ai,j of the matrix and is accessed by the two indices i and j. Conventionally, i is the row index, numbered from top to bottom, and j is the column index, numbered from left to right. For an m x n matrix, the amount of memory required to store the matrix in this format is proportional to m X n (disregarding the fact that the dimensions of the matrix also need to be stored).In the case of a sparse matrix, substantial memory requirement reductions can be realized by storing only the non-zero entries. Depending on the number and distribution of the non-zero entries, different data structures can be used and yield huge savings in memory when compared to the basic approach. The trade-off is that accessing the individual elements becomes more complex and additional structures are needed to be able to recover the original matrix unambiguously.Formats can be divided into two groups:Those that support efficient modification, such as DOK (Dictionary of keys), LIL (List of lists), or COO (Coordinate list). These are typically used to construct the matrices.Those that support efficient access and matrix operations, such as CSR (Compressed Sparse Row) or CSC (Compressed Sparse Column).</content><author>Anca Manea</author></currentPost></posts>
